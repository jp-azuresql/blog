<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Japan SQL Cloud Support Blog</title>
  
  <subtitle>日本マイクロソフト SQL Cloud チームによるサポートブログです。</subtitle>
  <link href="https://jp-azuresql.github.io/blog/atom.xml" rel="self"/>
  
  <link href="https://jp-azuresql.github.io/blog/"/>
  <updated>2023-07-11T08:43:01.723Z</updated>
  <id>https://jp-azuresql.github.io/blog/</id>
  
  <author>
    <name>Microsoft SQL Cloud Support Team</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Azure SQL Database / SQL Managed Instance ではメモリ使用率の監視は不要です</title>
    <link href="https://jp-azuresql.github.io/blog/Performance/memory-usage/"/>
    <id>https://jp-azuresql.github.io/blog/Performance/memory-usage/</id>
    <published>2023-05-19T02:00:00.000Z</published>
    <updated>2023-07-11T08:43:01.723Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。SQL Cloud サポート チームの宮崎です。</p><p>今回の投稿では、Azure SQL Database (SQL DB)、SQL Managed Instance (SQL MI) において、メモリ使用率の監視が不要である理由をご説明します。</p><span id="more"></span><h2 id="なぜメモリ使用率の監視が不要なのか"><a href="#なぜメモリ使用率の監視が不要なのか" class="headerlink" title="なぜメモリ使用率の監視が不要なのか"></a>なぜメモリ使用率の監視が不要なのか</h2><hr><p>SQL DB、SQL MI において、メモリは主にデータをキャッシュするために使用されます。これは、速度の遅いストレージからの読み取りに比べて、メモリからのデータの読み取りが高速となるからです。<br>そのため、メモリ使用率が高いと、多くのデータがメモリ上にキャッシュされていることを意味し、通常、クエリのパフォーマンスが向上します。メモリ使用率が高い場合でも、パフォーマンス観点で対処を必要としないという点から、メモリ使用率の監視は不要です。</p><p>また、SQL DB、SQL MI のデータベースエンジンでは、設計上、使用可能なすべてのメモリが使用されることが多くあり、メモリ使用率が高いことは、通常の動作となります。</p><p>&lt;以下関連ドキュメント&gt;<br><a href="https://learn.microsoft.com/ja-jp/azure/azure-sql/database/resource-limits-logical-server?view=azuresql#memory">Azure SQL Database でのリソース管理 - メモリ</a></p><p><a href="https://learn.microsoft.com/ja-jp/sql/relational-databases/memory-management-architecture-guide">メモリ管理アーキテクチャ ガイド</a></p><h2 id="メモリ使用率の急激な低下について"><a href="#メモリ使用率の急激な低下について" class="headerlink" title="メモリ使用率の急激な低下について"></a>メモリ使用率の急激な低下について</h2><hr><p>SQL DB、SQL MI では、弊社によりメンテナンスを実施しております。メンテナンス時には Reconfiguration と呼ばれるノードの切り替え（フェールオーバー）が発生し、その際、メモリ上のデータが引き継がれずメモリ使用率が急激に低下する場合があります。これは、想定された動作となっており、お客様側で別途ご対応いただく事項はありません。</p><p>メンテナンス完了後、メモリ上に無いデータをクエリの実行などでストレージから読み込んだ際に、再度データがメモリ上にキャッシュされるため、徐々にメモリ使用率も上昇していく動きとなります。</p><div class="alert is-info"><p class="alert-title">Note</p><p>メンテナンス時にメモリ使用率が低下した際、メモリ上にデータが無い状態でのクエリの実行はストレージからのデータ読み取りとなるため、メモリからの読み取り時に比べパフォーマンスが低下する場合があります。</p><p>しかし、メモリにデータがキャッシュされて以降のクエリ実行時はメモリからの読み取りとなり、パフォーマンスも改善します。</p></div><h2 id="メモリ不足は発生しないのか"><a href="#メモリ不足は発生しないのか" class="headerlink" title="メモリ不足は発生しないのか"></a>メモリ不足は発生しないのか</h2><hr><p>稀に、負荷の高いワークロードが原因でメモリ不足が発生しメモリ不足エラーになることがあります。ただし、メモリ不足エラーは、メモリ使用率が高くない場合でも発生する可能性があります。<br>コンピューティングサイズが小さく、使用可能な最大メモリサイズが相対的に小さい場合や、クエリ処理により多くのメモリを使用するワークロードで発生する可能性があります。</p><p>前述の通り、メモリ使用率が高い場合にメモリ不足が発生するというわけではないため、メモリ不足エラーが発生した場合は、少し時間を空けて処理を再度実行ください。また、同じクエリで毎回メモリ不足エラーが発生する場合は、同時に実行するクエリの数を減らすことや、クエリの改修をご検討ください。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;こんにちは。SQL Cloud サポート チームの宮崎です。&lt;/p&gt;
&lt;p&gt;今回の投稿では、Azure SQL Database (SQL DB)、SQL Managed Instance (SQL MI) において、メモリ使用率の監視が不要である理由をご説明します。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Performance" scheme="https://jp-azuresql.github.io/blog/tags/Performance/"/>
    
    <category term="Memory" scheme="https://jp-azuresql.github.io/blog/tags/Memory/"/>
    
    <category term="Metric" scheme="https://jp-azuresql.github.io/blog/tags/Metric/"/>
    
    <category term="Monitor" scheme="https://jp-azuresql.github.io/blog/tags/Monitor/"/>
    
  </entry>
  
  <entry>
    <title>SQL Managed Instance からストレージアカウントやリンクサーバーへの接続テスト方法</title>
    <link href="https://jp-azuresql.github.io/blog/Connectivity/mi-tcp-connectivity-test/"/>
    <id>https://jp-azuresql.github.io/blog/Connectivity/mi-tcp-connectivity-test/</id>
    <published>2023-05-17T06:00:00.000Z</published>
    <updated>2023-07-11T08:43:01.723Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。SQL Cloud サポート チームの川野辺です。</p><p>今回の投稿では、SQL Managed Instance (SQL MI) から、ストレージアカウントやリンクサーバーに接続できない場合の接続テスト方法に関してご案内します。</p><span id="more"></span><h2 id="実施手順"><a href="#実施手順" class="headerlink" title="実施手順"></a>実施手順</h2><hr><p>SQL MI はサブネット内にデプロイされるため、BULK INSERT などでストレージアカウントやリンクサーバーで異なる SQL MI などの外部リソースにアクセスを行う場合、サブネット内の SQL MI からの接続を許可するようにネットワークの構成を設定する必要があります。<br>その際、当該 SQL MI から外部リソースへの接続可否、および、名前解決結果を確認するため、以下の手順を活用いただけます。<br>なお、以下では PowerShell の Test-NetConnection コマンドレットを呼び出すジョブを SQL Managed Instance に作成し実行することで、実際に SQL MI から外部リソースへの接続可否、および、名前解決結果を確認します。</p><ol><li><p>対象インスタンスに接続します。</p></li><li><p>以下のコマンドの @endpoint に接続対象のエンドポイント (以下の例ではストレージアカウントの myaccount1.blob.core.windows.net) を指定し、スクリプトを実行ください。<br>@port には、BULK INSERT などを目的にストレージアカウントに接続する際には 443 ポート、リンクサーバーに対するテストは 1433 ポートを指定してください。</p></li></ol><table><thead><tr><th>接続テスト先</th><th>Port</th></tr></thead><tbody><tr><td>ストレージアカウント</td><td>443</td></tr><tr><td>リンクサーバー</td><td>1433</td></tr></tbody></table><p>以下にご案内しているスクリプトは、こちらで管理されておりますので、必要に応じてご参照ください。<br><a href="https://github.com/Azure/sqlmi/blob/main/how-to/how-to-test-tcp-connection-from-mi/TestTCPNetworkConnection.sql">https://github.com/Azure/sqlmi/blob/main/how-to/how-to-test-tcp-connection-from-mi/TestTCPNetworkConnection.sql</a></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">--<span class="built_in">START</span></span><br><span class="line">-- Parameters</span><br><span class="line">DECLARE @endpoint NVARCHAR(<span class="number">512</span>) = N&#x27;myaccount1.blob.core.windows.<span class="built_in">net</span>&#x27;</span><br><span class="line">DECLARE @port NVARCHAR(<span class="number">5</span>) = N&#x27;<span class="number">443</span>&#x27;</span><br><span class="line"></span><br><span class="line">--Script</span><br><span class="line">DECLARE @jobName NVARCHAR(<span class="number">512</span>) = N&#x27;TestTCPNetworkConnection&#x27;, @jobId BINARY(<span class="number">16</span>), @<span class="built_in">cmd</span> NVARCHAR(MAX)</span><br><span class="line"><span class="keyword">IF</span> EXISTS (SELECT job_id FROM msdb.dbo.sysjobs_view WHERE name = @jobName)</span><br><span class="line">EXEC msdb.dbo.sp_delete_job @job_name=@jobName, @delete_unused_schedule=<span class="number">1</span></span><br><span class="line">EXEC msdb.dbo.sp_add_job @job_name=@jobName, @enabled=<span class="number">1</span>, @job_id = @jobId OUTPUT</span><br><span class="line">DECLARE @stepName NVARCHAR(<span class="number">512</span>) = @endpoint + N&#x27;:&#x27; + @port</span><br><span class="line"><span class="built_in">SET</span> @<span class="built_in">cmd</span> = (N&#x27;tnc &#x27; + @endpoint + N&#x27; -port &#x27; + @port +&#x27; | select ComputerName, RemoteAddress, TcpTestSucceeded | <span class="built_in">Format</span>-List&#x27;)</span><br><span class="line">EXEC msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=@stepName</span><br><span class="line">, @step_id=<span class="number">1</span>, @cmdexec_success_code=<span class="number">0</span>, @subsystem=N&#x27;PowerShell&#x27;, @command=@<span class="built_in">cmd</span>, @database_name=N&#x27;master&#x27;</span><br><span class="line"></span><br><span class="line">EXEC msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N&#x27;(local)&#x27;</span><br><span class="line">EXEC msdb.dbo.sp_start_job @job_name=@jobName</span><br><span class="line"></span><br><span class="line">--Check status every <span class="number">5</span> seconds</span><br><span class="line">DECLARE @RunStatus INT </span><br><span class="line"><span class="built_in">SET</span> @RunStatus=<span class="number">10</span></span><br><span class="line">WHILE ( @RunStatus &gt;= <span class="number">4</span>)</span><br><span class="line">BEGIN</span><br><span class="line">SELECT distinct @RunStatus  = run_status</span><br><span class="line">FROM [msdb].[dbo].[sysjobhistory] JH JOIN [msdb].[dbo].[sysjobs] J ON JH.job_id= J.job_id </span><br><span class="line">WHERE J.name=@jobName and step_id = <span class="number">0</span></span><br><span class="line">WAITFOR DELAY &#x27;<span class="number">00</span>:<span class="number">00</span>:<span class="number">05</span>&#x27;; </span><br><span class="line">END</span><br><span class="line"></span><br><span class="line">--Get logs once job completes</span><br><span class="line">SELECT [step_name] AS [Endpoint]</span><br><span class="line">,SUBSTRING([message], CHARINDEX(&#x27;TcpTestSucceeded&#x27;,[message]), CHARINDEX(&#x27;Process <span class="keyword">Exit</span>&#x27;,[message])-CHARINDEX(&#x27;TcpTestSucceeded&#x27;,[message])) as TcpTestResult</span><br><span class="line">,SUBSTRING([message], CHARINDEX(&#x27;RemoteAddress&#x27;,[message]), CHARINDEX(&#x27;TcpTestSucceeded&#x27;,[message])-CHARINDEX(&#x27;RemoteAddress&#x27;,[message])) as RemoteAddressResult</span><br><span class="line">,[run_status] ,[run_duration], [message]</span><br><span class="line">FROM [msdb].[dbo].[sysjobhistory] JH JOIN [msdb].[dbo].[sysjobs] J ON JH.job_id= J.job_id</span><br><span class="line">WHERE J.name=@jobName and step_id &lt;&gt; <span class="number">0</span></span><br><span class="line">--END</span><br></pre></td></tr></table></figure><h2 id="出力結果の確認方法"><a href="#出力結果の確認方法" class="headerlink" title="出力結果の確認方法"></a>出力結果の確認方法</h2><hr><p>上記のコマンドを実行すると、以下のような出力結果が得られます。こちらのスクリーンショットでは、ストレージアカウントへの接続テストの結果を紹介しています。<br>TcpTestSucceeded : True が想定される結果となりますが、False となっていた場合、TCP レベルでの接続が失敗していることを示します。そのため、ネットワークセキュリテイグループ (NSG) やルートテーブルの見直しを実施ください。<br>また、RemoteAddressResult には、接続先のエンドポイントに対する名前解決の結果が表示されます。こちらの結果が得られない場合や想定される結果でない場合は、名前解決の設定が適切でない場合がありますので、DNS サーバーなどの見直しを実施ください。</p><p><img src="/blog/Connectivity/mi-tcp-connectivity-test/image001.png"></p><h2 id="参考情報"><a href="#参考情報" class="headerlink" title="参考情報"></a>参考情報</h2><hr><p>こちらの内容は、以下のブログ記事を参考に作成しています。</p><p><a href="https://techcommunity.microsoft.com/t5/azure-sql-blog/how-to-test-tcp-connectivity-from-a-sql-managed-instance/ba-p/3058458">https://techcommunity.microsoft.com/t5/azure-sql-blog/how-to-test-tcp-connectivity-from-a-sql-managed-instance/ba-p/3058458</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;こんにちは。SQL Cloud サポート チームの川野辺です。&lt;/p&gt;
&lt;p&gt;今回の投稿では、SQL Managed Instance (SQL MI) から、ストレージアカウントやリンクサーバーに接続できない場合の接続テスト方法に関してご案内します。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Connectivity" scheme="https://jp-azuresql.github.io/blog/tags/Connectivity/"/>
    
    <category term="Troubleshooting" scheme="https://jp-azuresql.github.io/blog/tags/Troubleshooting/"/>
    
  </entry>
  
  <entry>
    <title>Azure SQL Database / SQL Managed Instance のバージョンに関して</title>
    <link href="https://jp-azuresql.github.io/blog/Management/version/"/>
    <id>https://jp-azuresql.github.io/blog/Management/version/</id>
    <published>2023-05-16T01:00:00.000Z</published>
    <updated>2023-07-11T08:43:01.723Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。SQL Cloud サポート チームのリョウです。</p><p>今回の投稿では、Azure SQL Database (SQL DB)、SQL Managed Instance (SQL MI) におけるバージョンに関してご案内します。</p><span id="more"></span><h2 id="SQL-DB、SQL-MI-の-SQL-エンジンバージョンに関して"><a href="#SQL-DB、SQL-MI-の-SQL-エンジンバージョンに関して" class="headerlink" title="SQL DB、SQL MI の SQL エンジンバージョンに関して"></a>SQL DB、SQL MI の SQL エンジンバージョンに関して</h2><hr><p>SQL DB、SQL MIは常に最新の SQL エンジンバージョンを提供しております。これらの製品は PaaS サービスですので、お客様はご利用中の SQL DB、SQL MI のバージョンを制御する事はできず、また意識する必要もございません。<br>オンプレミス SQL Server をご利用されているお客様は、「バージョン 12 (SQL Server 2014)」といったバージョン概念に慣れ親しんでいると思いますが、SQL DB、SQL MI は PaaS サービスであるため、オンプレミス SQL Server の様なバージョン概念は存在しません。そのため、例えばですが、SQL DB、SQL MI のバージョン 12 だったとしても、オンプレミス SQL Server のバージョン 12 とは異なる SQL エンジンですので、オンプレミス SQL エンジンバージョンと PaaS サービスの SQL エンジンバージョンは全く異なるもので関係ないとお考えください。</p><h2 id="バージョンアップデートに関して"><a href="#バージョンアップデートに関して" class="headerlink" title="バージョンアップデートに関して"></a>バージョンアップデートに関して</h2><hr><p>SQL DB、SQL MI は定期的にバージョンのアップグレードを行っております。アップグレードはマイナーアップグレードとメジャーアップグレードの 2 種類ございます。</p><h3 id="・マイナーアップグレード"><a href="#・マイナーアップグレード" class="headerlink" title="・マイナーアップグレード"></a>・マイナーアップグレード</h3><hr><p>マイナーアップグレードは、以前のバージョンと互換性を保つ様にバージョンを更新します。マイナーアップグレードは、セキュリティパッチの適用や新規機能の実装が中心となっており、既存の機能が使えなくなることや既存の機能の動作が変わることはございません。<br>また、マイナーアップグレードは定期的なメンテナンス時に更新しているため、お客様はマイナーアップグレードのタイミングを意識する必要はなく、既存のアプリケーションの改修や事前の検証を実施する必要もございません。</p><h3 id="・メジャーアップグレード"><a href="#・メジャーアップグレード" class="headerlink" title="・メジャーアップグレード"></a>・メジャーアップグレード</h3><hr><p>メジャーアップグレードは基本的に実施されません。メジャーアップグレードは、製品アーキテクチャの変更など大きな仕様変更時に実施されるものであり、SQL DB、SQL MI をご利用中のお客様に大きな影響を与える可能性がございます。そのため、弊社にてメジャーアップグレードを実施すると決断した場合は、実施予定の数年前から予測される影響範囲の通知や移行・検証方法のご案内をさせて頂く流れとなっております。<br>この方針により基本的にはメジャーアップグレードは実施しないが、仮に実施したとしてもお客様は、移行・検証の時間的猶予がございます。</p><h2 id="ご利用中のバージョンの確認方法"><a href="#ご利用中のバージョンの確認方法" class="headerlink" title="ご利用中のバージョンの確認方法"></a>ご利用中のバージョンの確認方法</h2><hr><p>現在ご利用中の SQL DB、SQL MI のバージョンをご確認したい場合はご利用中の SQL DB、SQL MI に接続し、「SELECT @@version」を実行する事で確認する事ができます。<br>一方で、以下にてご紹介しますドキュメントの注意事項欄にも記載されておりますが、SQL DB、SQL MI に対して「SELECT @@version」を実行しても正しいバージョンが返ってこない場合がございます。実際は常に最新バージョンをご利用している事になりますので、この点ご安心ください。</p><p>詳細に関しては、以下の公開情報をご参照ください。</p><p><a href="https://learn.microsoft.com/ja-jp/sql/t-sql/functions/version-transact-sql-configuration-functions?view=sql-server-ver16">@@VERSION - Transact SQL 構成関数</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;こんにちは。SQL Cloud サポート チームのリョウです。&lt;/p&gt;
&lt;p&gt;今回の投稿では、Azure SQL Database (SQL DB)、SQL Managed Instance (SQL MI) におけるバージョンに関してご案内します。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Management" scheme="https://jp-azuresql.github.io/blog/tags/Management/"/>
    
    <category term="Version" scheme="https://jp-azuresql.github.io/blog/tags/Version/"/>
    
    <category term="Upgrade" scheme="https://jp-azuresql.github.io/blog/tags/Upgrade/"/>
    
  </entry>
  
  <entry>
    <title>接続エラーのトラブルシューティングに関して</title>
    <link href="https://jp-azuresql.github.io/blog/Connectivity/connectivity-troubleshooting/"/>
    <id>https://jp-azuresql.github.io/blog/Connectivity/connectivity-troubleshooting/</id>
    <published>2023-04-06T06:00:00.000Z</published>
    <updated>2023-07-11T08:43:01.715Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。SQL Cloud サポート チームの川野辺です。</p><p>今回の投稿では、Azure SQL Database (SQL DB)、SQL Managed Instance (SQL MI) における接続エラーのトラブルシューティング方法に関してご案内します。</p><span id="more"></span><h2 id="Azure-SQL-Connectivity-Checker-とは"><a href="#Azure-SQL-Connectivity-Checker-とは" class="headerlink" title="Azure SQL Connectivity Checker とは"></a>Azure SQL Connectivity Checker とは</h2><hr><p>Azure SQL Connectivity Checker とは、指定した SQL DB、SQL MI に対して接続テストを行い、接続に必要な TCP ポートの解放の有無、名前解決の可否などを明らかにできるツールとなります。<br>そのため、適切に構成したつもりなのに SQL DB へ接続できない、特定のクライアントからのみ SQL MI に接続できないなどの接続に関する問題の解決に有効です。</p><p><a href="https://github.com/Azure/SQL-Connectivity-Checker">Azure SQL Connectivity Checker</a></p><p>特に、Error: 10060 のように、エラーメッセージからは接続が確立できなかったことしか明らかでない接続エラーが発生した際に、問題の切り分けとして有効です。</p><blockquote><p>A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 0 - A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.) (Microsoft SQL Server, Error: 10060)</p></blockquote><p><a href="https://learn.microsoft.com/ja-jp/troubleshoot/sql/database-engine/connect/network-related-or-instance-specific-error-occurred-while-establishing-connection">SQL Server への接続を確立している間に、ネットワーク関連またはインスタンス固有のエラーが発生しました</a></p><h2 id="実施方法-Windows-環境のクライアント"><a href="#実施方法-Windows-環境のクライアント" class="headerlink" title="実施方法 Windows 環境のクライアント"></a>実施方法 Windows 環境のクライアント</h2><hr><ol><li>対象クライアントにて PowerShell を [管理者として実行] で起動します。<br>スクリプトを新規作成します。</li></ol><p><img src="/blog/Connectivity/connectivity-troubleshooting/image001.png"></p><ol start="2"><li>以下スクリプトをコピー&amp;ペーストし、Server, Database, User, Password を環境に合わせて変更ください。</li></ol><p><img src="/blog/Connectivity/connectivity-troubleshooting/image002.png"></p><p>なお、スクリプトの実行中 [raw.githubusercontent.com] からファイルのダウンロードのため HTTPS リクエストが発生します。<br>ファイアウォール等でインターネットへのアクセスに制限をかけておりましたら許可するよう対応をお願いいたします。</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">$parameters = @&#123;</span><br><span class="line">   # Supports Single, Elastic Pools and Managed Instance (please provide FQDN, MI public endpoint is supported)</span><br><span class="line">    # Supports Azure Synapse / Azure SQL Data Warehouse (*.sql.azuresynapse.<span class="built_in">net</span>/ *.database.windows.<span class="built_in">net</span>)</span><br><span class="line">    # Supports Public Cloud (*.database.windows.<span class="built_in">net</span>), Azure China (*.database.chinacloudapi.cn), Azure Germany (*.database.cloudapi.de) and Azure Government (*.database.usgovcloudapi.<span class="built_in">net</span>)</span><br><span class="line">    Server = &#x27;.database.windows.<span class="built_in">net</span>&#x27; # or any other supported FQDN</span><br><span class="line">    Database = &#x27;&#x27;  # <span class="built_in">Set</span> the name of the database you wish to test, &#x27;master&#x27; will be used by default <span class="keyword">if</span> nothing is <span class="built_in">set</span></span><br><span class="line">    User = &#x27;&#x27;  # <span class="built_in">Set</span> the login username you wish to use, &#x27;AzSQLConnCheckerUser&#x27; will be used by default <span class="keyword">if</span> nothing is <span class="built_in">set</span></span><br><span class="line">    Password = &#x27;&#x27;  # <span class="built_in">Set</span> the login password you wish to use, &#x27;AzSQLConnCheckerPassword&#x27; will be used by default <span class="keyword">if</span> nothing is <span class="built_in">set</span></span><br><span class="line"> </span><br><span class="line">    ## Optional parameters (default values will be used <span class="keyword">if</span> omitted)</span><br><span class="line">    SendAnonymousUsageData = $true  # <span class="built_in">Set</span> as $true (default) or $false</span><br><span class="line">    RunAdvancedConnectivityPolicyTests = $true  # <span class="built_in">Set</span> as $true (default) or $false, this will load the library from Microsoft&#x27;s GitHub repository needed <span class="keyword">for</span> running advanced connectivity tests</span><br><span class="line">    ConnectionAttempts = <span class="number">1</span> # Number of connection attempts while running advanced connectivity tests</span><br><span class="line">    DelayBetweenConnections = <span class="number">1</span> # Number of seconds to wait between connection attempts while running advanced connectivity tests</span><br><span class="line">    CollectNetworkTrace = $true  # <span class="built_in">Set</span> as $true (default) or $false</span><br><span class="line">    #EncryptionProtocol = &#x27;&#x27; # Supported values: &#x27;Tls <span class="number">1</span>.<span class="number">0</span>&#x27;, &#x27;Tls <span class="number">1</span>.<span class="number">1</span>&#x27;, &#x27;Tls <span class="number">1</span>.<span class="number">2</span>&#x27;; Without this parameter operating system will choose the best protocol to use</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">$ProgressPreference = &quot;SilentlyContinue&quot;;</span><br><span class="line"><span class="keyword">if</span> (&quot;AzureKudu&quot; -eq $env:DOTNET_CLI_TELEMETRY_PROFILE) &#123;</span><br><span class="line">    $scriptFile = &#x27;/ReducedSQLConnectivityChecker.ps1&#x27;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $scriptFile = &#x27;/AzureSQLConnectivityChecker.ps1&#x27;</span><br><span class="line">&#125;</span><br><span class="line">$scriptUrlBase = &#x27;https://raw.githubusercontent.com/Azure/SQL-Connectivity-Checker/master&#x27;</span><br><span class="line"><span class="built_in">cls</span></span><br><span class="line">Write-Host &#x27;Trying to download the script file from GitHub (https://github.com/Azure/SQL-Connectivity-Checker), please wait...&#x27;</span><br><span class="line">try &#123;</span><br><span class="line">    [<span class="built_in">Net</span>.ServicePointManager]::SecurityProtocol = [<span class="built_in">Net</span>.SecurityProtocolType]::Tls12 -bor [<span class="built_in">Net</span>.SecurityProtocolType]::Tls11 -bor [<span class="built_in">Net</span>.SecurityProtocolType]::Tls</span><br><span class="line">    Invoke-Command -ScriptBlock ([Scriptblock]::Create((Invoke-WebRequest ($scriptUrlBase + $scriptFile) -UseBasicParsing -TimeoutSec <span class="number">60</span>).Content)) -ArgumentList $parameters</span><br><span class="line">    &#125;</span><br><span class="line">catch &#123;</span><br><span class="line">    Write-Host &#x27;ERROR: The script file could <span class="keyword">not</span> be downloaded:&#x27; -ForegroundColor Red</span><br><span class="line">   $_.Exception</span><br><span class="line">    Write-Host &#x27;Confirm this machine can access https://github.com/Azure/SQL-Connectivity-Checker/&#x27; -ForegroundColor Yellow</span><br><span class="line">    Write-Host &#x27;or use a machine with Internet access to see how to run this from machines without Internet. See how <span class="built_in">at</span> https://github.com/Azure/SQL-Connectivity-Checker/&#x27; -ForegroundColor Yellow</span><br><span class="line">&#125;</span><br><span class="line">#end</span><br></pre></td></tr></table></figure><p>例：変更箇所 Server, Database, User, Password は以下の様に設定ください。</p><p><img src="/blog/Connectivity/connectivity-troubleshooting/image003.png"></p><ol start="3"><li>スクリプトを実行します。</li></ol><p><img src="/blog/Connectivity/connectivity-troubleshooting/image004.png"></p><ol start="4"><li>下記のようなメッセージが出力され、実行が終了します。<br>出力されたパスに接続テストツールの結果ファイルが出力されます。</li></ol><blockquote><p>Log file can be found at C:\Users\user001\AppData\Local\Temp\AzureSQLConnectivityCheckerResults\20210209T021953<br>A zip file with all the files can be found at C:\Users\user001\AppData\Local\Temp\AzureSQLConnectivityCheckerResults\20210209T021953/AllFiles.zip</p></blockquote><h2 id="実施方法-ネットワークアクセスが制限されている場合"><a href="#実施方法-ネットワークアクセスが制限されている場合" class="headerlink" title="実施方法 ネットワークアクセスが制限されている場合"></a>実施方法 ネットワークアクセスが制限されている場合</h2><hr><p>クライアントにてネットワークアクセスが制限されている場合も、インターネットアクセスが可能な端末でファイルをダウンロードし、対象クライアントに渡すことで、Azure SQL Connectivity Checker を実施いただけます。</p><ol><li>以下の URL に接続し、[Download ZIP] を選択ください。</li></ol><p><a href="https://github.com/Azure/SQL-Connectivity-Checker">https://github.com/Azure/SQL-Connectivity-Checker</a></p><p><img src="/blog/Connectivity/connectivity-troubleshooting/image005.png"></p><ol start="2"><li><p>ダウンロードされたファイル [SQL-Connectivity-Checker-master.zip] を調査対象クライアントに移動させ、全てのファイルを解凍ください。</p></li><li><p>PowerShell を管理者として実行いただき、[ファイル] – [開く] から [RunLocally.ps1] を選択し、Server, Database, User, Password をお客様の環境に合わせて変更ください。</p></li></ol><p><img src="/blog/Connectivity/connectivity-troubleshooting/image006.png"></p><ol start="3"><li><p>スクリプトを実行します。</p></li><li><p>下記のようなメッセージが出力され、実行が終了します。<br>出力されたパスに接続テストツールの結果ファイルが出力され、問題点を確認した場合はそちらに表示されます。</p></li></ol><blockquote><p>Log file can be found at C:\Users\user001\AppData\Local\Temp\AzureSQLConnectivityCheckerResults\20210209T021953<br>A zip file with all the files can be found at C:\Users\user001\AppData\Local\Temp\AzureSQLConnectivityCheckerResults\20210209T021953/AllFiles.zip</p></blockquote><p>詳細はこちらにもございますので、必要に応じてご確認ください。<br><a href="https://github.com/Azure/SQL-Connectivity-Checker#how-to-run-this-from-machines-without-internet-access">How to run this from machines without Internet access</a></p><h2 id="実施方法-Linux-環境のクライアント"><a href="#実施方法-Linux-環境のクライアント" class="headerlink" title="実施方法　Linux 環境のクライアント"></a>実施方法　Linux 環境のクライアント</h2><hr><p>Linux 環境からも、PowerShell をインストールすることで、Azure SQL Connectivity Checker を実施可能です。</p><ol><li><p>Linux 環境上に PowerShell がインストールされていなければ、以下の URL よりインストールください。<br><a href="https://docs.microsoft.com/powershell/scripting/install/installing-powershell-core-on-linux">https://docs.microsoft.com/powershell/scripting/install/installing-powershell-core-on-linux</a></p></li><li><p>ターミナルより pwsh を起動ください。</p></li><li><p>以下のコマンドの Server, Database, User, Password をお客様の環境に合わせて変更し、実行ください。</p></li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">$parameters = @&#123;</span><br><span class="line">    # Supports Single, Elastic Pools and Managed Instance (please provide FQDN, MI public endpoint is supported)</span><br><span class="line">    # Supports Azure Synapse / Azure SQL Data Warehouse (*.sql.azuresynapse.<span class="built_in">net</span> / *.database.windows.<span class="built_in">net</span>)</span><br><span class="line">    # Supports Public Cloud (*.database.windows.<span class="built_in">net</span>), Azure China (*.database.chinacloudapi.cn), Azure Germany (*.database.cloudapi.de) and Azure Government (*.database.usgovcloudapi.<span class="built_in">net</span>)</span><br><span class="line">    Server = &#x27;.database.windows.<span class="built_in">net</span>&#x27; # or any other supported FQDN</span><br><span class="line">    Database = &#x27;&#x27;  # <span class="built_in">Set</span> the name of the database you wish to test, &#x27;master&#x27; will be used by default <span class="keyword">if</span> nothing is <span class="built_in">set</span></span><br><span class="line">    User = &#x27;&#x27;  # <span class="built_in">Set</span> the login username you wish to use, &#x27;AzSQLConnCheckerUser&#x27; will be used by default <span class="keyword">if</span> nothing is <span class="built_in">set</span></span><br><span class="line">    Password = &#x27;&#x27;  # <span class="built_in">Set</span> the login password you wish to use, &#x27;AzSQLConnCheckerPassword&#x27; will be used by default <span class="keyword">if</span> nothing is <span class="built_in">set</span></span><br><span class="line"></span><br><span class="line">    ## Optional parameters (default values will be used <span class="keyword">if</span> omitted)</span><br><span class="line">    SendAnonymousUsageData = $true  # <span class="built_in">Set</span> as $true (default) or $false</span><br><span class="line">    RunAdvancedConnectivityPolicyTests = $true  # <span class="built_in">Set</span> as $true (default) or $false, this will load the library from Microsoft&#x27;s GitHub repository needed <span class="keyword">for</span> running advanced connectivity tests</span><br><span class="line">    ConnectionAttempts = <span class="number">1</span> # Number of connection attempts while running advanced connectivity tests</span><br><span class="line">    DelayBetweenConnections = <span class="number">1</span> # Number of seconds to wait between connection attempts while running advanced connectivity tests</span><br><span class="line">    CollectNetworkTrace = $true  # <span class="built_in">Set</span> as $true (default) or $false</span><br><span class="line">    #EncryptionProtocol = &#x27;&#x27; # Supported values: &#x27;Tls <span class="number">1</span>.<span class="number">0</span>&#x27;, &#x27;Tls <span class="number">1</span>.<span class="number">1</span>&#x27;, &#x27;Tls <span class="number">1</span>.<span class="number">2</span>&#x27;; Without this parameter operating system will choose the best protocol to use</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ProgressPreference = &quot;SilentlyContinue&quot;;</span><br><span class="line"><span class="keyword">if</span> (&quot;AzureKudu&quot; -eq $env:DOTNET_CLI_TELEMETRY_PROFILE) &#123;</span><br><span class="line">    $scriptFile = &#x27;/ReducedSQLConnectivityChecker.ps1&#x27;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $scriptFile = &#x27;/AzureSQLConnectivityChecker.ps1&#x27;</span><br><span class="line">&#125;</span><br><span class="line">$scriptUrlBase = &#x27;https://raw.githubusercontent.com/Azure/SQL-Connectivity-Checker/master&#x27;</span><br><span class="line"><span class="built_in">cls</span></span><br><span class="line">Write-Host &#x27;Trying to download the script file from GitHub (https://github.com/Azure/SQL-Connectivity-Checker), please wait...&#x27;</span><br><span class="line">try &#123;</span><br><span class="line">    [<span class="built_in">Net</span>.ServicePointManager]::SecurityProtocol = [<span class="built_in">Net</span>.SecurityProtocolType]::Tls12 -bor [<span class="built_in">Net</span>.SecurityProtocolType]::Tls11 -bor [<span class="built_in">Net</span>.SecurityProtocolType]::Tls</span><br><span class="line">    Invoke-Command -ScriptBlock ([Scriptblock]::Create((Invoke-WebRequest ($scriptUrlBase + $scriptFile) -UseBasicParsing -TimeoutSec <span class="number">60</span>).Content)) -ArgumentList $parameters</span><br><span class="line">    &#125;</span><br><span class="line">catch &#123;</span><br><span class="line">    Write-Host &#x27;ERROR: The script file could <span class="keyword">not</span> be downloaded:&#x27; -ForegroundColor Red</span><br><span class="line">    $_.Exception</span><br><span class="line">    Write-Host &#x27;Confirm this machine can access https://github.com/Azure/SQL-Connectivity-Checker/&#x27; -ForegroundColor Yellow</span><br><span class="line">    Write-Host &#x27;or use a machine with Internet access to see how to run this from machines without Internet. See how <span class="built_in">at</span> https://github.com/Azure/SQL-Connectivity-Checker/&#x27; -ForegroundColor Yellow</span><br><span class="line">&#125;</span><br><span class="line">#end</span><br></pre></td></tr></table></figure><ol start="4"><li>テストの完了後、以下のように接続テストの結果が表示されますので、こちらをご確認ください。</li></ol><p><img src="/blog/Connectivity/connectivity-troubleshooting/image007.png"></p><p>詳細はこちらにもございますので、必要に応じてご確認ください。<br><a href="https://github.com/Azure/SQL-Connectivity-Checker#run-from-linux">Run from Linux</a></p><h2 id="出力結果の確認方法"><a href="#出力結果の確認方法" class="headerlink" title="出力結果の確認方法"></a>出力結果の確認方法</h2><hr><p>Azure SQL Connectivity Checker の実行後には、自動でログがファイルに出力されます。<br>実施結果に関しては、以下のスクリーンショットのように [Log_~] の形式のファイルに出力され、こちらの [SUMMARY] にテスト結果、 適切に構成されていない場合は [RECOMMENDED ACTION(S)] に推奨事項が記載されます。</p><p><img src="/blog/Connectivity/connectivity-troubleshooting/image008.png"></p><p>例えば、接続に必要である 1433 ポートが解放されていない場合、以下のスクリーンショットのように、[RECOMMENDED ACTION(S)] に 1433 FAILED と出力され、こちらの設定の見直しに関してご案内があります。</p><p><img src="/blog/Connectivity/connectivity-troubleshooting/image009.png"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;こんにちは。SQL Cloud サポート チームの川野辺です。&lt;/p&gt;
&lt;p&gt;今回の投稿では、Azure SQL Database (SQL DB)、SQL Managed Instance (SQL MI) における接続エラーのトラブルシューティング方法に関してご案内します。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Connectivity" scheme="https://jp-azuresql.github.io/blog/tags/Connectivity/"/>
    
    <category term="Troubleshooting" scheme="https://jp-azuresql.github.io/blog/tags/Troubleshooting/"/>
    
  </entry>
  
  <entry>
    <title>Azure SQL Database / SQL Managed Instance の自動バックアップに関して</title>
    <link href="https://jp-azuresql.github.io/blog/Management/autobackup/"/>
    <id>https://jp-azuresql.github.io/blog/Management/autobackup/</id>
    <published>2023-04-04T06:00:00.000Z</published>
    <updated>2023-07-11T08:43:01.723Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。SQL Cloud サポート チームの川野辺です。</p><p>今回の投稿では、Azure SQL Database (SQL DB)、SQL Managed Instance (SQL MI) における自動バックアップに関してご案内します。</p><span id="more"></span><h2 id="自動バックアップとは"><a href="#自動バックアップとは" class="headerlink" title="自動バックアップとは"></a>自動バックアップとは</h2><hr><p>SQL DB、SQL MI におきまして、お客様は特別意識していただく必要なく、自動でバックアップが定期的に取得されております。そのため、弊社が責任をもって管理しておりますので、お客様にてバックアップの成否などを監視頂く必要もございません。<br>こちらの自動バックアップによって取得されたバックアップファイルを用いて、ポイントインタイムリストア (PITR) やバックアップの長期保有 (LTR) の機能で、柔軟にデータベースの復元が可能です。</p><p>自動バックアップ<br><a href="https://learn.microsoft.com/ja-jp/azure/azure-sql/database/automated-backups-overview?view=azuresql">Azure SQL Database の自動バックアップ</a></p><p><a href="https://learn.microsoft.com/ja-jp/azure/azure-sql/managed-instance/automated-backups-overview?view=azuresql">Azure SQL Managed Instance での自動バックアップ</a></p><p>ポイントインタイムリストア (PITR)<br><a href="https://learn.microsoft.com/ja-jp/azure/azure-sql/database/recovery-using-backups?view=azuresql&tabs=azure-portal">Azure SQL Database のバックアップからデータベースを復元する</a></p><p><a href="https://learn.microsoft.com/ja-jp/azure/azure-sql/managed-instance/recovery-using-backups?view=azuresql&tabs=azure-portal">Azure SQL Managed Instance のバックアップからデータベースを復元する</a></p><p>長期保有 (LTR)<br><a href="https://learn.microsoft.com/ja-jp/azure/azure-sql/database/long-term-retention-overview?view=azuresql">長期リテンション - Azure SQL Database と Azure SQL Managed Instance</a></p><h2 id="バックアップの管理に関して"><a href="#バックアップの管理に関して" class="headerlink" title="バックアップの管理に関して"></a>バックアップの管理に関して</h2><hr><p>自動バックアップによって取得されたバックアップファイルは、お客様のデータが保存されているストレージとは異なるバックアップストレージに保存されます。こちらのストレージに関しては、お客様がアクセスいただくことはできず、バックアップファイルを直接確認することや、削除することはできませんが、弊社によって責任を持って管理を行っております。<br>お客様はいつでもバックアップストレージの冗長性（ローカル冗長、ゾーン冗長、geo 冗長）を変更することができ、バックアップストレージの冗長性の変更に際し、データベースの再起動などは発生しません。<br>なお、自動バックアップを停止することもできかねますが、バックアップの取得に関しては、内部プロセスに割り当てられたコンピューティング リソースが使用されますので、お客様のワークロードに影響はございません。</p><h2 id="SQL-DB-にてバックアップをお客様で管理されたい場合"><a href="#SQL-DB-にてバックアップをお客様で管理されたい場合" class="headerlink" title="SQL DB にてバックアップをお客様で管理されたい場合"></a>SQL DB にてバックアップをお客様で管理されたい場合</h2><hr><p>SQL DB におきましては、お客様にてバックアップを取得することはできかねます。PITR や LTR によって、バックアップのリストアは可能ですので、多くのご要望にお応えすることが可能ですが、お客様のお手元で管理されたい場合にご案内できる代替策としましては、データベースを BACPAC ファイルにエクスポートする方法となります。<br>エクスポートを実施することで、BACPAC ファイルを取得可能であり、こちらを基にデータベースをインポートすることも可能ですので、こちらをお客様のお手元で管理される場合もあります。<br>詳細に関しては、以下の公開情報をご参照いただけますと幸いです。</p><p><a href="https://learn.microsoft.com/ja-jp/azure/azure-sql/database/database-export?source=recommendations&view=azuresql">BACPAC ファイルへのエクスポート - Azure SQL Database および Azure SQL Managed Instance</a></p><p><a href="https://learn.microsoft.com/ja-jp/azure/azure-sql/database/database-import?view=azuresql&tabs=azure-powershell">クイックスタート: Azure SQL Database または Azure SQL Managed Instance 内のデータベースに .bacpac ファイルをインポートする</a></p><h2 id="SQL-MI-にてバックアップをお客様で管理されたい場合"><a href="#SQL-MI-にてバックアップをお客様で管理されたい場合" class="headerlink" title="SQL MI にてバックアップをお客様で管理されたい場合"></a>SQL MI にてバックアップをお客様で管理されたい場合</h2><hr><p>SQL MI におきましては、COPY のみのバックアップの実施が可能ですので、こちらを実施いただくことで、お手元でバックアップファイルの管理が可能です。</p><p><a href="https://learn.microsoft.com/ja-jp/sql/relational-databases/backup-restore/copy-only-backups-sql-server?view=sql-server-ver16">コピーのみのバックアップ</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;こんにちは。SQL Cloud サポート チームの川野辺です。&lt;/p&gt;
&lt;p&gt;今回の投稿では、Azure SQL Database (SQL DB)、SQL Managed Instance (SQL MI) における自動バックアップに関してご案内します。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Management" scheme="https://jp-azuresql.github.io/blog/tags/Management/"/>
    
    <category term="Backup" scheme="https://jp-azuresql.github.io/blog/tags/Backup/"/>
    
  </entry>
  
  <entry>
    <title>Azure SQL Database / SQL Managed Instance のお問い合わせを起票いただく際に</title>
    <link href="https://jp-azuresql.github.io/blog/Information/support-request-guidance/"/>
    <id>https://jp-azuresql.github.io/blog/Information/support-request-guidance/</id>
    <published>2023-03-03T06:00:00.000Z</published>
    <updated>2023-07-11T08:43:01.723Z</updated>
    
    <content type="html"><![CDATA[<p>こんにちは。SQL Cloud サポート チームの川野辺です。</p><p>今回の投稿では、Azure SQL Database (SQL DB)、SQL Managed Instance (SQL MI) に関連するお問い合わせを起票いただく際に、速やかな解決のため、ご協力いただきたい点に関してご案内します。</p><span id="more"></span><h2 id="お問い合わせの発行に関しては最初にこちらをご一読ください"><a href="#お問い合わせの発行に関しては最初にこちらをご一読ください" class="headerlink" title="お問い合わせの発行に関しては最初にこちらをご一読ください"></a>お問い合わせの発行に関しては最初にこちらをご一読ください</h2><hr><div class="alert is-important"><p class="alert-title">重要</p><p>サポートリクエスト全般において、起票前にご留意いただきたい点に関して、こちらにご案内しております。</p><p>起票前にご一読ください。</p><p><a href="https://jpaztech.github.io/blog/information/How-to-inquiry-to-the-Azure-Support/">お問い合わせの発行方法について</a></p></div><h2 id="お問い合わせ時には以下の情報を添えてください"><a href="#お問い合わせ時には以下の情報を添えてください" class="headerlink" title="お問い合わせ時には以下の情報を添えてください"></a>お問い合わせ時には以下の情報を添えてください</h2><hr><p>SQL DB、SQL MI に関するお問い合わせの場合は、正確な調査のため、起票時に以下の情報を添えてください。<br>なお、起票時に対象となるリソースを選択いただきますと、自動的にサブスクリプション ID、リソースグループ名、サーバー名・インスタンス名、データベース名が取得されますので、こちらの選択にご協力ください。</p><ul><li>サブスクリプション ID (例 xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)</li><li>リソースグループ名</li><li>(SQL DB の場合) サーバー名 or (SQL MI の場合) インスタンス名</li><li>データベース名</li><li>事象の発生時刻 (例 日本時間 2023-03-01 15:13)</li><li>エラーメッセージの全文</li></ul><h2 id="適切な製品をご選択ください"><a href="#適切な製品をご選択ください" class="headerlink" title="適切な製品をご選択ください"></a>適切な製品をご選択ください</h2><hr><p>Azure 上のリレーショナルデータベースにおきましても、SQL Server や OSS のデータベースなど様々な種類が存在します。<br>その中で、SQL Server に限定しましても、SQL DB、SQL MI、SQL Server on Azure VM など様々なご利用形態をご提供しております。<br>それぞれの製品によって、ご案内内容や担当チームが異なる可能性がありますので、適切な回答をスムーズに提供するためにも、起票時には適切な製品の選択にご協力ください。</p><h2 id="事象発生からできるだけ早いタイミングでお問い合わせください"><a href="#事象発生からできるだけ早いタイミングでお問い合わせください" class="headerlink" title="事象発生からできるだけ早いタイミングでお問い合わせください"></a>事象発生からできるだけ早いタイミングでお問い合わせください</h2><hr><p>データベースで発生した事象の調査をご依頼の場合、データセンターのログによっては保持期間が短く、詳細をご案内できない場合があります。<br>そのため、事象が発生しましたら一両日中にお問い合わせください。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;こんにちは。SQL Cloud サポート チームの川野辺です。&lt;/p&gt;
&lt;p&gt;今回の投稿では、Azure SQL Database (SQL DB)、SQL Managed Instance (SQL MI) に関連するお問い合わせを起票いただく際に、速やかな解決のため、ご協力いただきたい点に関してご案内します。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Information" scheme="https://jp-azuresql.github.io/blog/tags/Information/"/>
    
    <category term="Support Request" scheme="https://jp-azuresql.github.io/blog/tags/Support-Request/"/>
    
  </entry>
  
</feed>
